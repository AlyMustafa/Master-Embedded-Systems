
Unit7_Lesson1_GPIO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000274  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003a4  080003ac  000103ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003a4  080003a4  000103ac  2**0
                  CONTENTS
  4 .ARM          00000000  080003a4  080003a4  000103ac  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003a4  080003ac  000103ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003a4  080003a4  000103a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080003a8  080003a8  000103a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000103ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080003ac  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080003ac  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000103ac  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a39  00000000  00000000  000103d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000001c9  00000000  00000000  00010e0e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00000110  00000000  00000000  00010fd7  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_aranges 00000060  00000000  00000000  000110e8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00000048  00000000  00000000  00011148  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_macro  00001d26  00000000  00000000  00011190  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_line   00000674  00000000  00000000  00012eb6  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_str    000080ea  00000000  00000000  0001352a  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .comment      0000007b  00000000  00000000  0001b614  2**0
                  CONTENTS, READONLY
 21 .debug_frame  000000c0  00000000  00000000  0001b690  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	0800038c 	.word	0x0800038c

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	0800038c 	.word	0x0800038c

08000170 <clock_init>:
#define GPIOB_CRH *((volatile uint32_t *)(GPIOB_BASE + 0x04))
#define GPIOB_ODR *((volatile uint32_t *)(GPIOB_BASE + 0x0C))
#define GPIOB_CRL *((volatile uint32_t *)(GPIOB_BASE + 0x00))

void clock_init ()
{
 8000170:	b480      	push	{r7}
 8000172:	af00      	add	r7, sp, #0
	//Init Clock
	RCC_APB2ENR |= (1<<2); //IO portA clock enable
 8000174:	4b07      	ldr	r3, [pc, #28]	; (8000194 <clock_init+0x24>)
 8000176:	681b      	ldr	r3, [r3, #0]
 8000178:	4a06      	ldr	r2, [pc, #24]	; (8000194 <clock_init+0x24>)
 800017a:	f043 0304 	orr.w	r3, r3, #4
 800017e:	6013      	str	r3, [r2, #0]
	RCC_APB2ENR |= (1<<3); //IO portB clock enable
 8000180:	4b04      	ldr	r3, [pc, #16]	; (8000194 <clock_init+0x24>)
 8000182:	681b      	ldr	r3, [r3, #0]
 8000184:	4a03      	ldr	r2, [pc, #12]	; (8000194 <clock_init+0x24>)
 8000186:	f043 0308 	orr.w	r3, r3, #8
 800018a:	6013      	str	r3, [r2, #0]
}
 800018c:	bf00      	nop
 800018e:	46bd      	mov	sp, r7
 8000190:	bc80      	pop	{r7}
 8000192:	4770      	bx	lr
 8000194:	40021018 	.word	0x40021018

08000198 <GPIO_init>:

void GPIO_init ()
{
 8000198:	b480      	push	{r7}
 800019a:	af00      	add	r7, sp, #0
	GPIOA_CRL = 0x0;
 800019c:	4b1f      	ldr	r3, [pc, #124]	; (800021c <GPIO_init+0x84>)
 800019e:	2200      	movs	r2, #0
 80001a0:	601a      	str	r2, [r3, #0]
	GPIOA_CRH = 0x0;
 80001a2:	4b1f      	ldr	r3, [pc, #124]	; (8000220 <GPIO_init+0x88>)
 80001a4:	2200      	movs	r2, #0
 80001a6:	601a      	str	r2, [r3, #0]
	GPIOB_CRL = 0x0;
 80001a8:	4b1e      	ldr	r3, [pc, #120]	; (8000224 <GPIO_init+0x8c>)
 80001aa:	2200      	movs	r2, #0
 80001ac:	601a      	str	r2, [r3, #0]
	GPIOB_CRH = 0x0;
 80001ae:	4b1e      	ldr	r3, [pc, #120]	; (8000228 <GPIO_init+0x90>)
 80001b0:	2200      	movs	r2, #0
 80001b2:	601a      	str	r2, [r3, #0]
	//PA1 floating pull_up single pressing
	GPIOA_CRL &=~ (0b11<<4);  //00: Input mode (reset state)
 80001b4:	4b19      	ldr	r3, [pc, #100]	; (800021c <GPIO_init+0x84>)
 80001b6:	681b      	ldr	r3, [r3, #0]
 80001b8:	4a18      	ldr	r2, [pc, #96]	; (800021c <GPIO_init+0x84>)
 80001ba:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 80001be:	6013      	str	r3, [r2, #0]
	GPIOA_CRL |= (0b01<<6);    //01: Floating input (reset state)
 80001c0:	4b16      	ldr	r3, [pc, #88]	; (800021c <GPIO_init+0x84>)
 80001c2:	681b      	ldr	r3, [r3, #0]
 80001c4:	4a15      	ldr	r2, [pc, #84]	; (800021c <GPIO_init+0x84>)
 80001c6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80001ca:	6013      	str	r3, [r2, #0]

	//PA15 floating pull_down multi pressing
	GPIOA_CRH &=~ (0b11<<28);  //00: Input mode (reset state)
 80001cc:	4b14      	ldr	r3, [pc, #80]	; (8000220 <GPIO_init+0x88>)
 80001ce:	681b      	ldr	r3, [r3, #0]
 80001d0:	4a13      	ldr	r2, [pc, #76]	; (8000220 <GPIO_init+0x88>)
 80001d2:	f023 5340 	bic.w	r3, r3, #805306368	; 0x30000000
 80001d6:	6013      	str	r3, [r2, #0]
	GPIOA_CRH |= (0b01<<30);    //01: Floating input (reset state)
 80001d8:	4b11      	ldr	r3, [pc, #68]	; (8000220 <GPIO_init+0x88>)
 80001da:	681b      	ldr	r3, [r3, #0]
 80001dc:	4a10      	ldr	r2, [pc, #64]	; (8000220 <GPIO_init+0x88>)
 80001de:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80001e2:	6013      	str	r3, [r2, #0]

	//PB1 Push_Pull zero
	GPIOB_CRL |= (0b01<<4); //01: Output mode, max speed 10 MHz.
 80001e4:	4b0f      	ldr	r3, [pc, #60]	; (8000224 <GPIO_init+0x8c>)
 80001e6:	681b      	ldr	r3, [r3, #0]
 80001e8:	4a0e      	ldr	r2, [pc, #56]	; (8000224 <GPIO_init+0x8c>)
 80001ea:	f043 0310 	orr.w	r3, r3, #16
 80001ee:	6013      	str	r3, [r2, #0]
	GPIOB_CRL &=~ (0b11<<6); //00: General purpose output push-pull
 80001f0:	4b0c      	ldr	r3, [pc, #48]	; (8000224 <GPIO_init+0x8c>)
 80001f2:	681b      	ldr	r3, [r3, #0]
 80001f4:	4a0b      	ldr	r2, [pc, #44]	; (8000224 <GPIO_init+0x8c>)
 80001f6:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 80001fa:	6013      	str	r3, [r2, #0]

	//PB13 Push_Pull zero
	GPIOB_CRH |= (0b01<<20); //01: Output mode, max speed 10 MHz.
 80001fc:	4b0a      	ldr	r3, [pc, #40]	; (8000228 <GPIO_init+0x90>)
 80001fe:	681b      	ldr	r3, [r3, #0]
 8000200:	4a09      	ldr	r2, [pc, #36]	; (8000228 <GPIO_init+0x90>)
 8000202:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000206:	6013      	str	r3, [r2, #0]
	GPIOB_CRH &=~ (0b11<<22); //00: General purpose output push-pull
 8000208:	4b07      	ldr	r3, [pc, #28]	; (8000228 <GPIO_init+0x90>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	4a06      	ldr	r2, [pc, #24]	; (8000228 <GPIO_init+0x90>)
 800020e:	f423 0340 	bic.w	r3, r3, #12582912	; 0xc00000
 8000212:	6013      	str	r3, [r2, #0]
}
 8000214:	bf00      	nop
 8000216:	46bd      	mov	sp, r7
 8000218:	bc80      	pop	{r7}
 800021a:	4770      	bx	lr
 800021c:	40010800 	.word	0x40010800
 8000220:	40010804 	.word	0x40010804
 8000224:	40010c00 	.word	0x40010c00
 8000228:	40010c04 	.word	0x40010c04

0800022c <wait_ms>:
void wait_ms(int x){
 800022c:	b480      	push	{r7}
 800022e:	b085      	sub	sp, #20
 8000230:	af00      	add	r7, sp, #0
 8000232:	6078      	str	r0, [r7, #4]

	int i,j;
	for(i=0 ; i<j ; i++){
 8000234:	2300      	movs	r3, #0
 8000236:	60fb      	str	r3, [r7, #12]
 8000238:	e00b      	b.n	8000252 <wait_ms+0x26>
		for(j=0 ; j<255 ; j++);
 800023a:	2300      	movs	r3, #0
 800023c:	60bb      	str	r3, [r7, #8]
 800023e:	e002      	b.n	8000246 <wait_ms+0x1a>
 8000240:	68bb      	ldr	r3, [r7, #8]
 8000242:	3301      	adds	r3, #1
 8000244:	60bb      	str	r3, [r7, #8]
 8000246:	68bb      	ldr	r3, [r7, #8]
 8000248:	2bfe      	cmp	r3, #254	; 0xfe
 800024a:	ddf9      	ble.n	8000240 <wait_ms+0x14>
	for(i=0 ; i<j ; i++){
 800024c:	68fb      	ldr	r3, [r7, #12]
 800024e:	3301      	adds	r3, #1
 8000250:	60fb      	str	r3, [r7, #12]
 8000252:	68fa      	ldr	r2, [r7, #12]
 8000254:	68bb      	ldr	r3, [r7, #8]
 8000256:	429a      	cmp	r2, r3
 8000258:	dbef      	blt.n	800023a <wait_ms+0xe>
	}
}
 800025a:	bf00      	nop
 800025c:	3714      	adds	r7, #20
 800025e:	46bd      	mov	sp, r7
 8000260:	bc80      	pop	{r7}
 8000262:	4770      	bx	lr

08000264 <main>:
int main(void)
{
 8000264:	b580      	push	{r7, lr}
 8000266:	af00      	add	r7, sp, #0
	clock_init ();
 8000268:	f7ff ff82 	bl	8000170 <clock_init>
	GPIO_init ();
 800026c:	f7ff ff94 	bl	8000198 <GPIO_init>
	GPIOB_ODR |= 1<<1;
 8000270:	4b1d      	ldr	r3, [pc, #116]	; (80002e8 <main+0x84>)
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	4a1c      	ldr	r2, [pc, #112]	; (80002e8 <main+0x84>)
 8000276:	f043 0302 	orr.w	r3, r3, #2
 800027a:	6013      	str	r3, [r2, #0]
	GPIOB_ODR &= ~(1<<1) ;
 800027c:	4b1a      	ldr	r3, [pc, #104]	; (80002e8 <main+0x84>)
 800027e:	681b      	ldr	r3, [r3, #0]
 8000280:	4a19      	ldr	r2, [pc, #100]	; (80002e8 <main+0x84>)
 8000282:	f023 0302 	bic.w	r3, r3, #2
 8000286:	6013      	str	r3, [r2, #0]

	GPIOB_ODR |= 1<<13;
 8000288:	4b17      	ldr	r3, [pc, #92]	; (80002e8 <main+0x84>)
 800028a:	681b      	ldr	r3, [r3, #0]
 800028c:	4a16      	ldr	r2, [pc, #88]	; (80002e8 <main+0x84>)
 800028e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000292:	6013      	str	r3, [r2, #0]
	GPIOB_ODR &= ~(1<<13) ;
 8000294:	4b14      	ldr	r3, [pc, #80]	; (80002e8 <main+0x84>)
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	4a13      	ldr	r2, [pc, #76]	; (80002e8 <main+0x84>)
 800029a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800029e:	6013      	str	r3, [r2, #0]
	/* Loop forever */
	while(1)
	{
		if(((GPIOA_IDR & (1<<1)) /*>> 1*/) == 0)
 80002a0:	4b12      	ldr	r3, [pc, #72]	; (80002ec <main+0x88>)
 80002a2:	681b      	ldr	r3, [r3, #0]
 80002a4:	f003 0302 	and.w	r3, r3, #2
 80002a8:	2b00      	cmp	r3, #0
 80002aa:	d10c      	bne.n	80002c6 <main+0x62>
		{
			GPIOB_ODR ^= 1<<1;
 80002ac:	4b0e      	ldr	r3, [pc, #56]	; (80002e8 <main+0x84>)
 80002ae:	681b      	ldr	r3, [r3, #0]
 80002b0:	4a0d      	ldr	r2, [pc, #52]	; (80002e8 <main+0x84>)
 80002b2:	f083 0302 	eor.w	r3, r3, #2
 80002b6:	6013      	str	r3, [r2, #0]
			while(((GPIOA_IDR & (1<<1))/* >> 1*/) == 0); //single press
 80002b8:	bf00      	nop
 80002ba:	4b0c      	ldr	r3, [pc, #48]	; (80002ec <main+0x88>)
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	f003 0302 	and.w	r3, r3, #2
 80002c2:	2b00      	cmp	r3, #0
 80002c4:	d0f9      	beq.n	80002ba <main+0x56>
		}
		if(((GPIOA_IDR & (1<<15)) >> 15) == 1)
 80002c6:	4b09      	ldr	r3, [pc, #36]	; (80002ec <main+0x88>)
 80002c8:	681b      	ldr	r3, [r3, #0]
 80002ca:	0bdb      	lsrs	r3, r3, #15
 80002cc:	f003 0301 	and.w	r3, r3, #1
 80002d0:	2b01      	cmp	r3, #1
 80002d2:	d105      	bne.n	80002e0 <main+0x7c>
		{
			GPIOB_ODR ^= 1<<13;	//multi press
 80002d4:	4b04      	ldr	r3, [pc, #16]	; (80002e8 <main+0x84>)
 80002d6:	681b      	ldr	r3, [r3, #0]
 80002d8:	4a03      	ldr	r2, [pc, #12]	; (80002e8 <main+0x84>)
 80002da:	f483 5300 	eor.w	r3, r3, #8192	; 0x2000
 80002de:	6013      	str	r3, [r2, #0]
		}
		wait_ms(1);
 80002e0:	2001      	movs	r0, #1
 80002e2:	f7ff ffa3 	bl	800022c <wait_ms>
		if(((GPIOA_IDR & (1<<1)) /*>> 1*/) == 0)
 80002e6:	e7db      	b.n	80002a0 <main+0x3c>
 80002e8:	40010c0c 	.word	0x40010c0c
 80002ec:	40010808 	.word	0x40010808

080002f0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002f0:	480d      	ldr	r0, [pc, #52]	; (8000328 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002f2:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002f4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002f8:	480c      	ldr	r0, [pc, #48]	; (800032c <LoopForever+0x6>)
  ldr r1, =_edata
 80002fa:	490d      	ldr	r1, [pc, #52]	; (8000330 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002fc:	4a0d      	ldr	r2, [pc, #52]	; (8000334 <LoopForever+0xe>)
  movs r3, #0
 80002fe:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000300:	e002      	b.n	8000308 <LoopCopyDataInit>

08000302 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000302:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000304:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000306:	3304      	adds	r3, #4

08000308 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000308:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800030a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800030c:	d3f9      	bcc.n	8000302 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800030e:	4a0a      	ldr	r2, [pc, #40]	; (8000338 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000310:	4c0a      	ldr	r4, [pc, #40]	; (800033c <LoopForever+0x16>)
  movs r3, #0
 8000312:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000314:	e001      	b.n	800031a <LoopFillZerobss>

08000316 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000316:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000318:	3204      	adds	r2, #4

0800031a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800031a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800031c:	d3fb      	bcc.n	8000316 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800031e:	f000 f811 	bl	8000344 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000322:	f7ff ff9f 	bl	8000264 <main>

08000326 <LoopForever>:

LoopForever:
    b LoopForever
 8000326:	e7fe      	b.n	8000326 <LoopForever>
  ldr   r0, =_estack
 8000328:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 800032c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000330:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000334:	080003ac 	.word	0x080003ac
  ldr r2, =_sbss
 8000338:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800033c:	2000001c 	.word	0x2000001c

08000340 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000340:	e7fe      	b.n	8000340 <ADC1_2_IRQHandler>
	...

08000344 <__libc_init_array>:
 8000344:	b570      	push	{r4, r5, r6, lr}
 8000346:	2500      	movs	r5, #0
 8000348:	4e0c      	ldr	r6, [pc, #48]	; (800037c <__libc_init_array+0x38>)
 800034a:	4c0d      	ldr	r4, [pc, #52]	; (8000380 <__libc_init_array+0x3c>)
 800034c:	1ba4      	subs	r4, r4, r6
 800034e:	10a4      	asrs	r4, r4, #2
 8000350:	42a5      	cmp	r5, r4
 8000352:	d109      	bne.n	8000368 <__libc_init_array+0x24>
 8000354:	f000 f81a 	bl	800038c <_init>
 8000358:	2500      	movs	r5, #0
 800035a:	4e0a      	ldr	r6, [pc, #40]	; (8000384 <__libc_init_array+0x40>)
 800035c:	4c0a      	ldr	r4, [pc, #40]	; (8000388 <__libc_init_array+0x44>)
 800035e:	1ba4      	subs	r4, r4, r6
 8000360:	10a4      	asrs	r4, r4, #2
 8000362:	42a5      	cmp	r5, r4
 8000364:	d105      	bne.n	8000372 <__libc_init_array+0x2e>
 8000366:	bd70      	pop	{r4, r5, r6, pc}
 8000368:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800036c:	4798      	blx	r3
 800036e:	3501      	adds	r5, #1
 8000370:	e7ee      	b.n	8000350 <__libc_init_array+0xc>
 8000372:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000376:	4798      	blx	r3
 8000378:	3501      	adds	r5, #1
 800037a:	e7f2      	b.n	8000362 <__libc_init_array+0x1e>
 800037c:	080003a4 	.word	0x080003a4
 8000380:	080003a4 	.word	0x080003a4
 8000384:	080003a4 	.word	0x080003a4
 8000388:	080003a8 	.word	0x080003a8

0800038c <_init>:
 800038c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800038e:	bf00      	nop
 8000390:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000392:	bc08      	pop	{r3}
 8000394:	469e      	mov	lr, r3
 8000396:	4770      	bx	lr

08000398 <_fini>:
 8000398:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800039a:	bf00      	nop
 800039c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800039e:	bc08      	pop	{r3}
 80003a0:	469e      	mov	lr, r3
 80003a2:	4770      	bx	lr
